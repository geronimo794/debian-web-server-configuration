#!/bin/bash

# Load .env file
set -o allexport
if [ ! -f .env ]; then
	source format.env
else
	source .env
fi
set +o allexport

# Set jenkins url
if [ ! -z "$URL_JENKINS" ]
then
	echo '

# Required for Jenkins websocket agents
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Generated by Rozikin Script
server {
	listen 80;
    server_name '"$URL_JENKINS"';
    location ~ "^/static/[0-9a-fA-F]{8}\/(.*)$" {
        # rewrite all static files into requests to the root
        # E.g /static/12345678/css/something.css will become /css/something.css
        rewrite "^/static/[0-9a-fA-F]{8}\/(.*)" /$1 last;
    }

    location / {
        sendfile off;
        proxy_pass http://127.0.0.1:'"$PORT_JENKINS"'/;
        proxy_redirect     default;
        proxy_http_version 1.1;

        # Required for Jenkins websocket agents
        proxy_set_header   Connection        $connection_upgrade;
        proxy_set_header   Upgrade           $http_upgrade;

        proxy_set_header   Host              $http_host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   X-Forwarded-Host  '"$URL_JENKINS"'; 

        proxy_max_temp_file_size 0;

        #this is the maximum upload size
        client_max_body_size       10m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
        proxy_buffering            off;
        proxy_request_buffering    off; # Required for HTTP CLI commands
        proxy_set_header Connection ""; # Clear for keepalive
    }
}

	' | sudo tee /etc/nginx/sites-available/$PORT_JENKINS.$URL_JENKINS
	sudo ln -s /etc/nginx/sites-available/$PORT_JENKINS.$URL_JENKINS /etc/nginx/sites-enabled/$PORT_JENKINS.$URL_JENKINS 
	sudo systemctl restart nginx
	sudo certbot --nginx -d $URL_JENKINS

	echo "--------------------------------------------------------------"
	echo "Your Jenkins now accessible on: https://"$URL_JENKINS
	echo "--------------------------------------------------------------"
	# Sleep 10 second to next process
	echo "Sleep 10 second to the next process"
	sleep 10s

	# Close previous port
	sudo ufw delete allow $PORT_JENKINS/tcp
fi

# Set promotheus url
if [ ! -z "$URL_PROMOTHEUS" ]
then
	echo '
# Generated by Rozikin Script
server {
	server_name '"$URL_PROMOTHEUS"';
	listen 80;
	location / {
			proxy_ssl_server_name on;
			proxy_set_header Host $host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://127.0.0.1:'"$PORT_PROMOTHEUS"'/;
	}
}
	' | sudo tee /etc/nginx/sites-available/$PORT_PROMOTHEUS.$URL_PROMOTHEUS
	sudo ln -s /etc/nginx/sites-available/$PORT_PROMOTHEUS.$URL_PROMOTHEUS /etc/nginx/sites-enabled/$PORT_PROMOTHEUS.$URL_PROMOTHEUS 
	sudo systemctl restart nginx
	sudo certbot --nginx -d $URL_PROMOTHEUS

	echo "--------------------------------------------------------------"
	echo "Your Promotheus now accessible on: https://"$URL_PROMOTHEUS
	echo "--------------------------------------------------------------"
	# Sleep 10 second to next process
	echo "Sleep 10 second to the next process"
	sleep 10s

	# Close previous port
	sudo ufw delete allow $PORT_PROMOTHEUS/tcp
fi

# Set grafana url
if [ ! -z "$URL_GRAFANA" ]
then
	echo '
# Generated by Rozikin Script
server {
	server_name '"$URL_GRAFANA"';
	listen 80;
	location / {
			proxy_ssl_server_name on;
			proxy_set_header Host $host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://127.0.0.1:'"$PORT_GRAFANA"'/;
	}
}
	' | sudo tee /etc/nginx/sites-available/$PORT_GRAFANA.$URL_GRAFANA
	sudo ln -s /etc/nginx/sites-available/$PORT_GRAFANA.$URL_GRAFANA /etc/nginx/sites-enabled/$PORT_GRAFANA.$URL_GRAFANA 
	sudo systemctl restart nginx
	sudo certbot --nginx -d $URL_GRAFANA

	echo "--------------------------------------------------------------"
	echo "Your Grafana now accessible on: https://"$URL_GRAFANA
	echo "--------------------------------------------------------------"
	# Sleep 10 second to next process
	echo "Sleep 10 second to the next process"
	sleep 10s

	# Close previous port
	sudo ufw delete allow $PORT_GRAFANA/tcp
fi
